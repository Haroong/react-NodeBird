{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostAction } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  const dispatch = useDispatch('');\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  });\n  const onSubmit = useCallback(() => {\n    dispatch(addPostAction);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: v,\n        style: {\n          width: '200px'\n        },\n        alt: v\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC81C\\uAC70\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, v, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useState","Button","Form","Input","useDispatch","useSelector","addPostAction","PostForm","imagePaths","state","post","imageInput","dispatch","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AACA,QAAMC,UAAU,GAAGZ,MAAM,EAAzB;AACA,QAAMa,QAAQ,GAAGR,WAAW,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMe,YAAY,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;AACtCF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAF+B,CAAhC;AAGA,QAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAM;AACjCc,IAAAA,QAAQ,CAACN,aAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,QAAMc,kBAAkB,GAAGtB,WAAW,CAAC,MAAM;AAC3Ca,IAAAA,UAAU,CAACU,OAAX,CAAmBC,KAAnB;AACD,GAFqC,EAEnC,CAACX,UAAU,CAACU,OAAZ,CAFmC,CAAtC;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAC,qBAFV;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAAA,4BAKE,QAAC,KAAD,CAAO,QAAP;AACE,MAAA,KAAK,EAAEN,IADT;AAEE,MAAA,QAAQ,EAAEE,YAFZ;AAGE,MAAA,SAAS,EAAE,GAHb;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAES,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAA9B;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAkBGhB,UAAU,CAACiB,GAAX,CAAgBC,CAAD,iBACd;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAApB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,CAAV;AAAa,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAApB;AAAwC,QAAA,GAAG,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,YADD,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA5CD;;AA8CA,eAAenB,QAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPostAction } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n  const dispatch = useDispatch('');\r\n  const [text, setText] = useState('');\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  });\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPostAction);\r\n  }, []);\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: '10px 0 20px' }}\r\n      encType='multipart/form-data'\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder='어떤 신기한 일이 있었나요?'\r\n      />\r\n      <div>\r\n        <input type='file' multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type='primary' style={{ float: 'right' }} htmlType='submit'>\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      {imagePaths.map((v) => (\r\n        <div key={v} style={{ display: 'inline-block' }}>\r\n          <img src={v} style={{ width: '200px' }} alt={v} />\r\n          <div>\r\n            <Button>이미지 제거</Button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}