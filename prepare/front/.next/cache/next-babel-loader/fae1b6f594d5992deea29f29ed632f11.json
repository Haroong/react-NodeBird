{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Card, Popover } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, SmileTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    console.log('clicked liked');\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, 'retweet', false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(SmileTwoTone, {\n        twoToneColor: \"#F4364C\",\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {}, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, 'comment', false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, _this)\n      }, 'more', false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"qjo02WruhXZcdwWdlG/xwVw2yKY=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-nodebird/prepare/front/components/PostCard.js"],"names":["Button","Card","Popover","React","useCallback","useState","PropTypes","RetweetOutlined","HeartOutlined","SmileTwoTone","MessageOutlined","EllipsisOutlined","ButtonGroup","useSelector","Avatar","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","console","log","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Button, Card, Popover } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  SmileTwoTone,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from '@ant-design/icons';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport { useSelector } from 'react-redux';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nimport PostImages from '../components/PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    console.log('clicked liked');\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key='retweet' />,\r\n          liked ? (\r\n            <SmileTwoTone\r\n              twoToneColor='#F4364C'\r\n              key='heart'\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key='heart' />\r\n          ),\r\n          <MessageOutlined key='comment' onClick={onToggleComment} />,\r\n          <Popover\r\n            key='more'\r\n            content={\r\n              <ButtonGroup>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type='danger'>삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </ButtonGroup>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && <div>댓글부분</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}