{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user'; // initialState\n\nconst initialState = {\n  user: {},\n  post: {}\n}; // action creator - 사용자의 입력에 따라 동적으로 생성\n// (이전 상태, 액션) => 다음 상태\n// initialState, action => return data\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n    // 이걸 빠뜨리면 Reducer 'user' returned undefiend error 발생\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","user","initialState","post","rootReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBD,EAAAA,IAAI,EAAE,EADa;AAEnBE,EAAAA,IAAI,EAAE;AAFa,CAArB,C,CAKA;AAEA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACE,6CACKK,KADL,GAEKC,MAAM,CAACE,OAFZ;;AAKF;AACE,aAAOH,KAAP;AAAc;AARlB;AAUD,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nimport user from './user';\r\n\r\n// initialState\r\nconst initialState = {\r\n  user: {},\r\n  post: {},\r\n};\r\n\r\n// action creator - 사용자의 입력에 따라 동적으로 생성\r\n\r\n// (이전 상태, 액션) => 다음 상태\r\n// initialState, action => return data\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state; // 이걸 빠뜨리면 Reducer 'user' returned undefiend error 발생\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}